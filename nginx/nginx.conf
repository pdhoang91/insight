# Nginx Server Configuration for Insight Application
# This file contains server blocks only (no global directives)

# Upstream definitions
upstream frontend {
    server frontend:3000;
}

upstream application {
    server application:81;
}

upstream search_service {
    server search_service:83;
}

# HTTP Server - handles both localhost and production domains
server {
    listen 80;
    server_name localhost insight.io.vn www.insight.io.vn;

    # Rate limiting will be handled by main nginx.conf

    # Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri $uri/ =404;
    }

    # Health check endpoint
    location /health {
        return 200 'OK';
        add_header Content-Type text/plain;
    }

    # For production domains, redirect to HTTPS
    location / {
        # If accessing via domain (not localhost), redirect to HTTPS
        if ($host != "localhost") {
            return 301 https://www.insight.io.vn$request_uri;
        }
        
        # For localhost, serve normally with rate limiting
        limit_req zone=general burst=100 nodelay;
        
        proxy_pass http://frontend/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # API Images proxy - handle /api/images/ requests (MUST come before /api/)
    location /api/images/ {
        if ($host != "localhost") {
            return 301 https://www.insight.io.vn$request_uri;
        }
        
        limit_req zone=general burst=100 nodelay;
        
        proxy_pass http://application/images/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache images
        expires 1d;
        add_header Cache-Control "public";
    }

    # Search API routes - search service
    location /api/search/ {
        if ($host != "localhost") {
            return 301 https://www.insight.io.vn$request_uri;
        }
        
        limit_req zone=api burst=30 nodelay;
        
        proxy_pass http://search_service/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # API routes - main backend (MUST come after specific /api/* routes)
    location /api/ {
        # Redirect to HTTPS for production domains
        if ($host != "localhost") {
            return 301 https://www.insight.io.vn$request_uri;
        }
        
        limit_req zone=api burst=30 nodelay;
        
        proxy_pass http://application/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Images proxy - handle both /images/ and /api/images/
    location /images/ {
        if ($host != "localhost") {
            return 301 https://www.insight.io.vn$request_uri;
        }
        
        limit_req zone=general burst=100 nodelay;
        
        proxy_pass http://application/images/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache images
        expires 1d;
        add_header Cache-Control "public";
    }

    # Next.js static assets
    location /_next/ {
        if ($host != "localhost") {
            return 301 https://www.insight.io.vn$request_uri;
        }
        
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache static assets
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
}

# HTTPS Server for production domains
server {
    listen 443 ssl;
    http2 on;
    server_name insight.io.vn www.insight.io.vn;

    # SSL Configuration (certificates should be provided)
    ssl_certificate /etc/nginx/certs/insight.io.vn.crt;
    ssl_certificate_key /etc/nginx/certs/insight.io.vn.key;

    # SSL Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript application/json;

    # Frontend (Next.js) - main route
    location / {
        limit_req zone=general burst=100 nodelay;
        
        proxy_pass http://frontend/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # API Images proxy - handle /api/images/ requests (MUST come before /api/)
    location /api/images/ {
        limit_req zone=general burst=100 nodelay;
        
        proxy_pass http://application/images/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache images
        expires 1d;
        add_header Cache-Control "public";
    }

    # Search API routes - search service  
    location /api/search/ {
        limit_req zone=api burst=30 nodelay;
        
        proxy_pass http://search_service/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # API routes - main backend (MUST come after specific /api/* routes)
    location /api/ {
        limit_req zone=api burst=30 nodelay;
        
        proxy_pass http://application/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Images proxy - handle both /images/ and /api/images/
    location /images/ {
        limit_req zone=general burst=100 nodelay;
        
        proxy_pass http://application/images/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache images
        expires 1d;
        add_header Cache-Control "public";
    }

    # Next.js static assets
    location /_next/ {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache Next.js assets aggressively
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Static files caching
    location ~* \.(jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot|css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # Try to serve static files, fallback to frontend
        try_files $uri @frontend;
    }
    
    # Named location for frontend proxy fallback
    location @frontend {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}