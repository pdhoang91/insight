version: '3.7'

services:
  app:
    container_name: application
    build:
      context: ./backend
    ports:
      - "81:81"
    depends_on:
      - db
      - elasticsearch
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
      - JWT_SECRET=${JWT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URL=${GOOGLE_REDIRECT_URL}
      - BASE_API_URL=${BASE_API_URL}
      - BASE_FE_URL=${BASE_FE_URL}
      - BASE_BE_URL=${BASE_BE_URL}

    networks:
      - app-network

  db:
    image: postgres:13
    container_name: database
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5432" # Cổng này chỉ để truy cập từ host, không cần thiết cho kết nối giữa các container
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    networks:
      - app-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - db
      - elasticsearch

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
