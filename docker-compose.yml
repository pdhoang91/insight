
services:
  nginx:
   image: nginx:latest
   container_name: nginx_proxy
   ports:
     - "80:80"        # Cổng chính để truy cập từ host
     - "443:443"      # Nếu bạn muốn sử dụng HTTPS
   volumes:
     - ./nginx/conf.d:/etc/nginx/conf.d  # Thư mục chứa cấu hình Nginx
     - ./nginx/certs:/etc/nginx/certs    # Thư mục chứa chứng chỉ SSL (nếu sử dụng HTTPS)
   depends_on:
     - frontend
     - application
     - image-service
   networks:
     - app-network

  db:
    image: postgres:13
    container_name: database
    restart: always
    # depends_on:
    #   - fluentd
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5432" # Cổng này chỉ để truy cập từ host, không cần thiết cho kết nối giữa các container
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network

  application:
    container_name: application
    build:
      context: ./backend/application
      cache_from:
        - golang:1.23-alpine
        - alpine:3.19
      target: runner
    expose:                           # Sử dụng `expose` thay vì `ports`
      - "81"
    ports:
      - "81:81"
    volumes:
      - ./backend/application/uploads:/app/uploads  # Mount thư mục uploads của backend
    depends_on:
      - db
      - image-service
      #- fluentd
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres

      - JWT_SECRET=${JWT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URL=${GOOGLE_REDIRECT_URL}
      - BASE_SEARCH_API_URL=http://search_service:83
      - BASE_API_URL=${BASE_API_URL}
      - BASE_FE_URL=${BASE_FE_URL}
      - BASE_BE_URL=${BASE_BE_URL}
      - LOG_LEVEL=DEBUG
    networks:
      - app-network
    # logging:
    #   driver: "fluentd"
    #   options:
    #     fluentd-address: localhost:24224
    #     tag: docker.application

  image-service:
    container_name: image_service
    build:
      context: ./backend/image-service
      cache_from:
        - golang:1.23-alpine
        - alpine:3.19
      target: runner
    expose:
      - "82"
    ports:
      - "82:82"
    volumes:
      - image-data:/app/images/uploads
    depends_on:
      - db
      #- fluentd
    environment:
      - BASE_BE_URL=${BASE_BE_URL}
      - LOG_LEVEL=DEBUG
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
    networks:
      - app-network
    # logging:
    #   driver: "fluentd"
    #   options:
    #     fluentd-address: localhost:24224
    #     tag: docker.image_service

  search-service:
    container_name: search_service
    build:
      context: ./backend/search-service
      cache_from:
        - golang:1.23-alpine
        - alpine:3.19
      target: runner
    expose:
      - "83"
    ports:
      - "83:83"
    # volumes:
    #   - ./search-service/images:/app/images/uploads  # Mount thư mục uploads của image-service
    depends_on:
      - db
      #- fluentd
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres

      - BASE_BE_URL=${BASE_BE_URL}
      - logger.level=debug
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - LOG_LEVEL=DEBUG
    networks:
      - app-network
    # logging:
    #   driver: "fluentd"
    #   options:
    #     fluentd-address: localhost:24224
    #     tag: docker.search_service







  # Thêm Fluentd
  # fluentd:
  #   #image: fluent/fluentd:v1.14-debian-1
  #   build:
  #     context: ./backend/fluentd
  #     dockerfile: Dockerfile
  #   container_name: fluentd
  #   depends_on:
  #     elasticsearch:
  #       condition: service_healthy
  #   ports:
  #     - "24224:24224"       # Port mặc định cho Fluentd
  #     - "24224:24224/udp"   # Port UDP cho Fluentd
  #   expose:
  #     - "24224"
  #   volumes:
  #     - ./backend/fluentd/conf:/fluentd/etc    # Thư mục cấu hình Fluentd
  #     - ./backend/fluentd/logs:/fluentd/log    # Thư mục lưu trữ log
  #     - ./backend/fluentd/buffer:/fluentd/buffer # Thư mục buffer
  #   networks:
  #     - app-network

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      cache_from:
        - node:22-alpine
      target: runner
    expose:
      - "3000"
    ports:
      - "3000:3000"  # Bạn có thể giữ hoặc loại bỏ dòng này nếu muốn frontend chỉ truy cập thông qua Nginx
    # depends_on:
    #   - fluentd
    networks:
      - app-network

  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./backend/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml  # Cấu hình Prometheus
  #   networks:
  #     - app-network

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   ports:
  #     - "3001:3000"
  #   depends_on:
  #     - prometheus
  #   networks:
  #     - app-network
  #   environment:
  #     - GF_SERVER_ROOT_URL=https://apiinsight.site/grafana/
  #     - GF_SERVER_SERVE_FROM_SUB_PATH=true
  #     - GF_SECURITY_ADMIN_PASSWORD=admin  # Đặt mật khẩu admin an toàn
  #     - GF_LOG_LEVEL=debug
  #   volumes:
  #   - grafana-data:/var/lib/grafana  # Đảm bảo dữ liệu Grafana được lưu trữ
  #   restart: unless-stopped

  # node-exporter:
  #   image: prom/node-exporter:latest
  #   container_name: node_exporter
  #   ports:
  #     - "9100:9100"  # Port mặc định của Node Exporter
  #   networks:
  #     - app-network
  #   restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
  grafana-data:
  image-data:
